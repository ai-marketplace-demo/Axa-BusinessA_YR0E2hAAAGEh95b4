AWSTemplateFormatVersion: 2010-09-09
Resources:
  Topic:
    Type: 'AWS::SNS::Topic'
  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: sns.amazonaws.com
      FunctionName: !GetAtt
        - FunctionTopicSubscription
        - Arn
      SourceArn: !Ref Topic
  Subscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !GetAtt
        - FunctionTopicSubscription
        - Arn
      Protocol: lambda
      TopicArn: !Ref Topic
    DependsOn:
      - FunctionTopicSubscription
  FunctionTopicSubscription:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs6.10
      Code:
        ZipFile:
          Fn::Join:
          - '

            '
          - - exports.handler = function(event, context, callback) {
            - '  console.log(''REQUEST RECEIVED:\n'', JSON.stringify(event));'
            - '  callback(null, ''Request processed'');'
            - '};'
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
      Timeout: '30'
    DependsOn:
      - LambdaExecutionRole
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:*'
                Effect: Allow
              - Action:
                  - 'sns:Subscribe'
                  - 'sns:Receive'
                  - 'sns:Unsubscribe'
                Resource: !Ref Topic
                Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com